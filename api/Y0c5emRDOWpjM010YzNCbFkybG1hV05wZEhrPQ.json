{"title":"CSS Specificity and Cascade","date":"2018-12-22T02:56:45.000Z","excerpt":"","slug":"css-specificity","comments":true,"tags":["note","css"],"categories":["language core"],"updated":"2018-12-22T03:10:11.053Z","content":"<blockquote>\n<p>This is the reading note for “Chapter 3: Specificity and the Cascade, CSS: The definitive guide”. <br></p>\n</blockquote>\n<h2 id=\"CSS-Specificity-and-Cascade\"><a href=\"#CSS-Specificity-and-Cascade\" class=\"headerlink\" title=\"CSS Specificity and Cascade\"></a>CSS Specificity and Cascade</h2><p>When the same element selected by the same operator, the property value might collapse.</p>\n<ul>\n<li>Specificity: different kinds of selectors</li>\n<li>Inheritance: Implicit style</li>\n<li>Cascade: resolve conflicts among the same specificity</li>\n</ul>\n<h3 id=\"Specificity\"><a href=\"#Specificity\" class=\"headerlink\" title=\"Specificity\"></a>Specificity</h3><p>A selector’s specificity is determined by the components of the selector itself. <br><br>A specificity could be represented by a tuple with four numbers, like (0,0,0,0) <br><br>The actual specificity of a selector is determined as follows:</p>\n<ul>\n<li>For every ID attribute: add (0,1,0,0)</li>\n<li>For every class attribute, attribute selection, or pseudo-class given in the selector: add (0,0,1,0)</li>\n<li>For every element and pseudo-element given in the selector, add (0,0,0,1)</li>\n<li>Combinators and universal selector do not cotribute anything to specificity</li>\n</ul>\n<p>Examples:<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> <span class=\"selector-tag\">em</span> &#123;<span class=\"attribute\">color</span>: red&#125; <span class=\"comment\">/*0,0,0,2*/</span></span><br><span class=\"line\">*<span class=\"selector-class\">.bright</span> &#123;<span class=\"attribute\">color</span>: yellow&#125; <span class=\"comment\">/*0,0,1,0*/</span></span><br><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-class\">.bright</span> <span class=\"selector-tag\">em</span><span class=\"selector-class\">.dark</span> &#123;<span class=\"attribute\">color</span>: maroon&#125; <span class=\"comment\">/*0,0,2,2*/</span></span><br><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-id\">#sidebar</span> *<span class=\"selector-attr\">[href]</span> &#123;<span class=\"attribute\">color</span>: silver&#125; <span class=\"comment\">/*0,1,1,1*/</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"Universal-Selector-Specificity\"><a href=\"#Universal-Selector-Specificity\" class=\"headerlink\" title=\"Universal Selector Specificity\"></a>Universal Selector Specificity</h4><p>The universal selector does not contribute to specificity. <br><br>It has a specificity of (0,0,0,0) which is different than having no specificity, such as combinators. <br></p>\n<h4 id=\"ID-and-Attribute-Selector-Specificity\"><a href=\"#ID-and-Attribute-Selector-Specificity\" class=\"headerlink\" title=\"ID and Attribute Selector Specificity\"></a>ID and Attribute Selector Specificity</h4><p>It is important to note the difference in specificity between an ID selector and an attribute selector that targets an <code>id</code> attribute. <br><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &gt; <span class=\"selector-tag\">body</span> <span class=\"selector-tag\">table</span> <span class=\"selector-tag\">tr</span><span class=\"selector-attr\">[id=\"totals\"]</span> <span class=\"selector-tag\">td</span> <span class=\"selector-tag\">ul</span> &gt; <span class=\"selector-tag\">li</span> &#123;<span class=\"attribute\">color</span>: black&#125; <span class=\"comment\">/*0,0,1,7*/</span></span><br><span class=\"line\"><span class=\"selector-tag\">li</span><span class=\"selector-id\">#winner</span> &#123;<span class=\"attribute\">color</span>:gray&#125; <span class=\"comment\">/*0,1,0,1*/</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"Inline-style-specificity\"><a href=\"#Inline-style-specificity\" class=\"headerlink\" title=\"Inline style specificity\"></a>Inline style specificity</h4><p>The first 0 is reserved for inline style declartions, which trump any other declaration’s specificity. </p>\n<h3 id=\"Importance\"><a href=\"#Importance\" class=\"headerlink\" title=\"Importance\"></a>Importance</h3><p>Declarations that are marked <code>!important</code> do not have a special specificity value, but are instead separately from non-important declarations. </p>\n<h3 id=\"Inheritance\"><a href=\"#Inheritance\" class=\"headerlink\" title=\"Inheritance\"></a>Inheritance</h3><p>Inheritance is the mechanism by which some styles are applied not only to a specified element, but also to its descendants. <br><br>For example, if a color is applied to an <code>h1</code> element, for example, then that color is applied to all text inside the <code>h1</code>, even the text enclosed within child elements of that <code>h1</code>:<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">h1</span> &#123;<span class=\"attribute\">color</span>:gray;&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Fruits are on <span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span> SALE !<span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span> <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>Something need to keep in mind: </p>\n<ul>\n<li>Many properties are not inherited, such as border, margin, padding…</li>\n<li>Inherited values have no specificity at all, not even zero specificity.<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">h1</span><span class=\"selector-id\">#page-title</span> &#123;<span class=\"attribute\">color</span>:black;&#125;</span></span><br><span class=\"line\"><span class=\"css\">    * &#123;<span class=\"attribute\">color</span>:gray;&#125;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"comment\">/* h1 &gt; em &#123;color: inherit;&#125; */</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"page-title\"</span>&gt;</span>Fruits are on <span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span> SALE !<span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span> <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"The-Cascade-（堆叠）\"><a href=\"#The-Cascade-（堆叠）\" class=\"headerlink\" title=\"The Cascade （堆叠）\"></a>The Cascade （堆叠）</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;<span class=\"attribute\">color</span>: red;&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;<span class=\"attribute\">color</span>: green;&#125;</span><br></pre></td></tr></table></figure>\n<p>CSS is based on a method of causing styles to <em>cascade</em> together, which is made possible by combining inheritance and specificity with a few rules. </p>\n<ol>\n<li>Find all rules that contains a selector that matches a given element.</li>\n<li>Sort all declarations applying to the given element by explicit weight. Those rules marked <code>!important</code> have a higher weight than those that are not. </li>\n<li>Sort all declarations applying to the given element by origin. There are three basic origins: author, reader, and user agent. Under normal circumstances, the authors styles win out over the reader’s styles. <code>!important</code> reader styles are stronger than any other sytles.</li>\n<li>Sort all declarations applying to the given element by <em>specificity</em>. Those elements with a higher specificity have more weight than those with a lower specificity.</li>\n<li>Sort all declarations applying to the given element by order. The later a declaration appears in the style sheet or document, the more weight it is given. Declarations that appear in an imported style sheet are considered to come before all declarations within the style sheet that imports them. </li>\n</ol>\n<h4 id=\"Sorting-by-origins\"><a href=\"#Sorting-by-origins\" class=\"headerlink\" title=\"Sorting by origins\"></a>Sorting by origins</h4><ol>\n<li>Reader important declarations</li>\n<li>Author important declarations</li>\n<li>Author normal declarations</li>\n<li>Reader normal declarations</li>\n<li>User agent declarations</li>\n</ol>\n<h4 id=\"Sorting-by-order\"><a href=\"#Sorting-by-order\" class=\"headerlink\" title=\"Sorting by order\"></a>Sorting by order</h4><p>The recommendation for link styles is link-visited-focus-hover-active or LVFHA.</p>\n","next":{"title":"Javascript: Handling Events","slug":"js-handling-events"},"link":"https://whitefusion.github.io/post/css-specificity"}