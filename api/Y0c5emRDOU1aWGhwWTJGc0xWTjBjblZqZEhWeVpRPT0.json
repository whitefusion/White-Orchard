{"title":"Javascript: Lexical Structure","date":"2018-06-15T16:17:42.000Z","excerpt":"","slug":"Lexical-Structure","comments":true,"tags":["core","language","note","javascript"],"updated":"2018-06-15T16:49:56.171Z","content":"<blockquote>\n<p>This is the reading note for “Chapter 2: Lexical Structure, Javascript: The definitive guide 5th edition”. <br></p>\n</blockquote>\n<p>Lexical structure is the lowest-level syntax of a language. <br></p>\n<p>Javascript are written using the <strong>Unicode character set</strong>. It supports virtually every written language currently used on the planet. <br></p>\n<p>Javascript is a <strong>case-sensitivity</strong> language. But HTML is not case-sensitive. This could be confusing from time to time. For example, the HTML <em>onclick</em> event handler attributes is sometimes specified as <em>onClick</em> in HTML, but it must be specified as <em>onclick</em> in Javascript code. <br></p>\n<p>Javascript ignores spaces that appear between tokens in programs. For the most part, Javascript also ingnores line breaks. But it doesn’t treat every line break as a semicolon: it usually treats line breaks as semicolons only if it can’t parse the code without the semicolons. More formally, Javascript treats a line break as a semicolon if the next nonspace character cannot be interpreted as a continuation of the current statement.<br></p>\n<p>Some computer hardware and software can not display or input the full set of Unicode characters. Javascript defines special sequences of six ASCII characters to represent any 16-bit Unicode codepoint. The Unicode <em>escapes</em> begins with the character <strong>“\\u”</strong> and are followed by exactly four hexadecimal digits. But it will be ignored in comments. <br></p>\n<p>Unicode allows more than one way of encoding the same character. For example, <code>\\u00e9</code> display the same as <code>e\\u0301</code>, but they have different binary encodings and are considered different by the computer. <br></p>\n<p>In Javascript, “//“ or “/<em> </em>/“ are treated as comments marks. <br></p>\n<p>A <em>literal</em> is a data value that appears directly in a program. <br></p>\n<p>An <em>identifier</em> is simply a name, it is used to name variables and functions and to provide labels for certains loops in Javascript code. A Javascript identifier must begin with a letter, an underscore (_) or a dollar sign($). It is common to use only ASCII letters and digits in identifiers. However, Javascript allows identifiers to contain letters and digits from the entire Unicode character set. <br></p>\n<p>Semicolon (;) are used to separate statements. Usually, it was omitted. </p>\n","next":{"title":"Angular: Typescript","slug":"Typescript"},"link":"https://whitefusion.github.io/post/Lexical-Structure"}